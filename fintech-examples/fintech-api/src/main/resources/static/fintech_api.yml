openapi: 3.0.1

info:
  title: Open Banking Gateway FinTech Example API
  description: |
    This API provides FinTech possibilities to perform use-cases specific calls 
    to the bank of PSU.

externalDocs:
  url: "https://adorsys.github.io/open-banking-gateway"
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"

tags:
- name: FinTech
  description: Example Financial web service provided by the FinTech.

paths:
  /v1/login:
    post:
      tags:
      - Authorization
      operationId: loginPOST
      summary: Identifies the PSU in the Realm of the FinTechApi.
      description: |
        Simple login interface used to establish a session between 
        PSU and FinTech. Real application will delegate login to an oAuth2 
        Identity provider.
      parameters:
        #header
        - $ref: "#/components/parameters/X-Request-ID"
      requestBody:
        description: Login request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
        required: true
      x-codegen-request-body-name: loginRequest
      responses:
        '200':
          $ref: "#/components/responses/200_UserProfile"
        '302':
          $ref: '#/components/responses/302_Redirect'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden' 
        '404':
          $ref: '#/components/responses/404_NotFound'
           
  /v1/search/{sessionState}/bankSearch:
    get:
      tags:
      - BankSearch
      operationId: bankSearchGET
      summary: Issues an incremental bank search request to the FinTechApi.
      description: Issues an incremental bank search request to the FinTechApi.
      parameters:
      #path
      - $ref: "#/components/parameters/sessionState"
      #header
      - $ref: "#/components/parameters/X-Request-ID"
      #query
      - name: keyword
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/searchInput'
      - name: start
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/searchStartIndex'
      - name: max
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/searchMaxResult'
      security:
        - cookieAuth: []
      responses:
        '200':
          $ref: "#/components/responses/200_BankSearchResult"
        '302':
          $ref: '#/components/responses/302_Redirect'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden' 
        '404':
          $ref: '#/components/responses/404_NotFound'

  /v1/search/{sessionState}/bankProfile:
    get:
      tags:
      - BankSearch
      summary: Request the profile of the bank identified with id (bankId).
      description: Request the profile of the bank identified with id (bankId).
      operationId: bankProfileGET
      parameters:
      #path
      - $ref: "#/components/parameters/sessionState"
      #header
      - $ref: "#/components/parameters/X-Request-ID"
      - name: bankId
        in: query
        description: Identifier of the bank to be loaded.
        required: true
        schema:
          type: string
      security:
        - cookieAuth: []
      responses:
        '200':
          $ref: "#/components/responses/200_BankProfile"
        '302':
          $ref: '#/components/responses/302_Redirect'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden' 
        '404':
          $ref: '#/components/responses/404_NotFound'

  /v1/ais/{sessionState}/banks/{bank-id}/accounts:
    get:
      tags:
        - Account Information
      operationId: aisAccountsGET
      summary: Provides list of available accounts for the given bank
      description: |
        Read the identifiers of the available payment accounts.
        
        If required by the bank, PSU consent will be obtained before returning 
        the list of bank accounts.

        Returns all identifiers of the accounts, to which an account access has 
        been granted to by the PSU. In addition, relevant information about the 
        accounts and hyperlinks to corresponding account information resources 
        are provided if a related consent has been already granted.
      parameters:
        #path
        - $ref: "#/components/parameters/sessionState"
        - $ref: "#/components/parameters/bank-id"
        #header
        - $ref: "#/components/parameters/X-Request-ID"
      security:
        - cookieAuth: []
      responses:
        '200':
          $ref: "#/components/responses/200_AccountList"
        '302':
          $ref: '#/components/responses/302_Redirect'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden' 
        '404':
          $ref: '#/components/responses/404_NotFound' 

  /v1/ais/{sessionState}/banks/{bank-id}/accounts/{account-id}/transactions:
    get:
      tags:
        - Account Information
      operationId: aisTransactionsGET
      summary: Returns the list of transactions of the given account
      description: Returns the list of transactions of the given account.
      parameters:
        #path
        - $ref: "#/components/parameters/sessionState"
        - $ref: "#/components/parameters/bank-id"
        - $ref: "#/components/parameters/account-id"
        #query
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        - $ref: "#/components/parameters/entryReferenceFrom"
        - $ref: "#/components/parameters/bookingStatus"
        - $ref: "#/components/parameters/deltaList"
        #header
        - $ref: "#/components/parameters/X-Request-ID"
      security:
        - cookieAuth: []
      responses:
        '200':
          $ref: '#/components/responses/200_AccountsTransactions'
        '302':
          $ref: '#/components/responses/302_Redirect'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden' 
        '404':
          $ref: '#/components/responses/404_NotFound' 

  /v1/{redirect-id}/fromConsentOk/{redirectSessionState}:
    get:
      tags:
        - Authorization
      operationId: fromConsentOkGET
      summary: Entry point when PSU is redirected back to the FinTechApi.
      description: |
        Entry point when PSU is redirected back to the FinTechApi by the 
        ConsentAuthorisationApi.
      parameters:
        #path
        - $ref: "#/components/parameters/redirectSessionState"
        - $ref: "#/components/parameters/redirect-id"
        #query
        - $ref: "#/components/parameters/redirectCode"
      security:
        - cookieAuth: []
      responses:
        '302':
          $ref: '#/components/responses/302_ReloadUI'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden' 
        '404':
          $ref: '#/components/responses/404_NotFound' 


components:

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: FTLSC
      description: >
        This is the FinTechLoginSessionCookie used to maintain the login session
        between the FinTechUI and the FinTechApi. If a cookie is sent, the 
        FintechLoginRequest will contain a fintechLoginSessionState used to check
        the cookie agains CSRF.
        Cookie requires a FinTechLoginSessionState (FTLSS) parameter that is used to 
        read the FinTechLoginSessionCookie. 

  headers:

    Set-Cookie:
      name: Set-Cookie
      description: |
        FTLSC Cookie used to maintain the login session between the FinTechUI
        and the FinTechApi. Cookie requires a FinTechLoginSessionState (FTLSS)
        parameter that is used to read the cookie.
        
        I the case of a redirect, we might also include a RedirectSessionCookie.
        A RedirectSessionCookie carries a name specific to each redirectSession
        and can automaticaly login the user when the user is sent back to the
        FintechApi.
      schema:
        type: string
        example: FTLSC=ejxs.wersdzxxc23r.asdf; Path=/, RDC=ejts.adsfa.adfaj; Path=/consentOk

    X-Request-ID:
      name: X-Request-ID
      required: true
      description: >
        Unique ID that identifies this request through common workflow.
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    Location-Consent-Auth:
      name: Location
      description: |
        This is the 30X Location Header. It contains a redirect link for 
        the /auth endpoint of the ConsentAuthorisationApi. This link must 
        contain a redirectCode as a query parameter.
      schema:
        type: string
        example: http://localhost:8083/consent/auth?redirectCode=ejxs.wersdzxxc23r.asdf

    Location-FinTechUI:
      name: Location
      description: |
        Entry point for loading the FinTechUI from the FinTechApi. This is 
        generaly invoked when another application redirects an authenticated
        user to the FinTechApi. The FinTechApi has to use the request parameters
        generaly a SessionCookie and a SessionState to authenticate the user and
        reload the FinTechUI seting a FinTechLoginSessionCookie and passing a
        FinTechLoginSessionState an query or request parameter to the UI application.
      schema:
        type: string
        example: http://localhost:8080/finTechUi?sessionState=ejxs.wersdzxxc23r.asdf

  parameters:

    X-Request-ID:
      name: X-Request-ID
      in: header
      required: true
      description: |
        Unique ID that identifies this request through common workflow. Must be 
        contained in HTTP Response as well.
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    sessionState:
      name: sessionState
      in: path
      description: FinTechLoginSessionState
      required: true
      schema:
        type: string

    redirect-id:
      name: redirect-id
      in: path
      required: true
      schema:
        type: string

    redirectSessionState:
      name: redirectSessionState
      in: path
      description: RedirectSessionState
      required: true
      schema:
        type: string

    redirectCode:
      name: redirectCode
      in: query
      required: true
      schema:
        type: string

    bank-id:
      name: bank-id
      in: path
      required: true
      schema:
        type: string

    account-id:
      name: account-id
      in: path
      required: true
      schema:
        type: string

    bookingStatus:
      name: bookingStatus
      in: query
      description: |
        Permitted codes are
          * "booked",
          * "pending" and
          * "both"
        To support the "pending" and "both" feature is optional for the ASPSP,
        Error code if not supported in the online banking frontend
        Default is "booked"
      required: false
      schema:
        type: string
        enum:
          - "booked"
          - "pending"
          - "both"

    dateFrom:
      name: dateFrom
      in: query
      description: |
        Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.

        For booked transactions, the relevant date is the booking date.

        For pending transactions, the relevant date is the entry date, which may not be transparent
        neither in this API nor other channels of the ASPSP.
      required: false
      schema:
        type: string
        format: date


    dateTo:
      name: dateTo
      in: query
      description: |
        End date (inclusive the data dateTo) of the transaction list, default is "now" if not given.

        Might be ignored if a delta function is used.

        For booked transactions, the relevant date is the booking date.

        For pending transactions, the relevant date is the entry date, which may not be transparent
        neither in this API nor other channels of the ASPSP.

      required: false
      schema:
        type: string
        format: date

    deltaList:
      name: deltaList
      in: query
      description: |
        This data attribute is indicating that the AISP is in favour to get all transactions after the last report access
        for this PSU on the addressed account.
        This is another implementation of a delta access-report.

        This delta indicator might be rejected by the ASPSP if this function is not supported.

        Optional if supported by API provider
      schema:
        type: boolean

    entryReferenceFrom:
      name: entryReferenceFrom
      in: query
      description: |
        This data attribute is indicating that the AISP is in favour to get all transactions after
        the transaction with identification entryReferenceFrom alternatively to the above defined period.
        This is a implementation of a delta access.
        If this data element is contained, the entries "dateFrom" and "dateTo" might be ignored by the ASPSP
        if a delta report is supported.

        Optional if supported by API provider.
      required: false
      schema:
        type: string


  responses:

    200_UserProfile:
      description: |
        The user profile object. Contains information needed to present some
        sort of dashboard to the user.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionState:
                $ref: '#/components/schemas/sessionState'
              userProfile:
                $ref: '#/components/schemas/userProfile'

    200_BankSearchResult:
      description: The result of a bank search.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionState:
                $ref: '#/components/schemas/sessionState'
              bankProfile:
                type: array
                items:
                  $ref: '#/components/schemas/bankProfile'
              keyword:
                $ref: '#/components/schemas/searchInput'
              start:
                $ref: '#/components/schemas/searchStartIndex'
              max:
                $ref: '#/components/schemas/searchMaxResult'
              total:
                $ref: '#/components/schemas/searchTotalResult'

    200_BankProfile:
      description: Response containing the service profile of a bank.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionState:
                $ref: '#/components/schemas/sessionState'
              userProfile:
                type: array
                items:
                  $ref: '#/components/schemas/bankProfile'

    200_AccountList:
      description: Response containing the list of bank accounts.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionState:
                $ref: '#/components/schemas/sessionState'
              accountList:
                $ref: '#/components/schemas/accountList'

    200_AccountsTransactions:
      description: Response with transactions for given account
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionState:
                $ref: '#/components/schemas/sessionState'
              accountList:
                $ref: '#/components/schemas/transactionsResponse'


    302_Redirect:
      description: Redirects UserAgent to the ConsentAuthorisationApi.
      headers:
        Location:
          $ref: '#/components/headers/Location-Consent-Auth'
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
          description: |
            Here the cookie set ic called a RedirectSessionCookie. Looks like
            RDSC_XYZ=ejts.adsfa.adfaj; Path=/fromConsentOk. In the case XYZ is an
            identifier used to keep track of different RDCs. As a user can
            initiate more than one sca from one browser instance. 
            * Note that the path of the RDC is Path=/v1/XYZ/fromConsentOk/.
            * So RDSC are only sent to the server when a callback link
              commes from the ConsentAuthorisationApi
            * Also note that the callback link hast the structure
              /v1/{redirect-id}/fromConsentOk/{redirectSessionState} where the
              redirect-id is a simple random string (XYZ) and redirectSessionState
              the key to read theRedirectSessionCookie.
            * The callback link is not part of the location link. It is passed to
            the ConsentAuthorisationApi through the ConsentSession shared in the
            backend (BankingProtocol).
            * RedirectSessionCookie has an expiration date after which no callback
            will be accepted from the ConsentAuthorisationApi anyway.
    302_ReloadUI:
      description: |
        Reloads the FinTechUI with the authenticated context of the PSU. This 
        generaly happens after a back redirect from the ConsentAuthorisationApi.
      headers:
        Location:
          $ref: '#/components/headers/Location-FinTechUI'
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
    401_Unauthorized:
      description: |
        Access credentials absent or invalid. This happens when
        * Provided credential for login not matching.
        * Endpoin expect a session cookie but none is present.
        * Session cookie is present but associated stateString does not match.
        
        As a consequence, we reset existing FinTechLoginSessionState if any. 
        Nevertheless we do not reset RedirectSessionCookie.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
           $ref: '#/components/schemas/errorResponse'
    403_Forbidden:
      description: |
        The specified resource is not available for this user. User is still
        authorize to access other endpoint. This is none of the credentials of 
        the user need to be deleted.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
          description: |
            As this is not an authorization process. This is the user 
            credential can be extended in the course of processing this request
            and will have to be returned with this response. The response body 
            will cary the corresponding sessionState object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    404_NotFound:
      description: The specified resource was not found
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        Set-Cookie:
          $ref: '#/components/headers/Set-Cookie'
          description: |
            As this is not an authorization process. This is the user 
            credential can be extended in the course of processing this request
            and will have to be returned with this response. The response body 
            will cary the corresponding sessionState object.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/errorResponse'

  schemas:

    # Technical data for sessionState and errorResponse
    sessionState:
      title: SessionState
      type: string
      description: This is the CSRF-State String for the FinTechLoginSessionCookie.

    errorResponse:
      title: ErrorResponse
      type: object
      properties:
        sessionState:
          $ref: '#/components/schemas/sessionState'
        psuMessages:
          type: array
          items:
            $ref: '#/components/schemas/psuMessage'
    psuMessage:
      title: PsuMessage
      type: object
      properties:
        category:
          required: true
          type: string
          enum:
            - ERROR
            - WARNING
            - INFO
        code:
          required: true
          type: string
        path:
          type: string
        text:
          type: string

    # Login
    loginRequest:
      title: Login Request
      type: object
      properties:
        username:
          required: true
          type: string
        password:
          required: true
          type: string
    userProfile:
      title: User Profile
      type: object
      properties:
        name:
          type: string
        lastLogin:
          type: string
          format: date

    # Search and bank profile
    searchInput:
      description: The bank search input string
      schema:
        type: string
    searchStartIndex:
      description: The index of the first result
      schema:
        type: integer
    searchMaxResult:
      description: The max number of entries to return with the response.
      schema:
        type: integer
    searchTotalResult:
      description: The total count of entities found for the given search input.
      schema:
        type: integer
    bankProfile:
      title: Bank Profile
      type: object
      properties:
        bankName:
          type: string
        bic:
          type: string
        services:
          type: array
          items:
            # can be an enum
            type: string

    # Account and transaction information
    accountDetails:
      description: |
        The ASPSP shall give at least one of the account reference identifiers:
          - iban
          - bban
          - pan
          - maskedPan
          - msisdn
        If the account is a multicurrency account currency code in "currency" is set to "XXX".
      type: object
      required:
        - currency
      properties:
        resourceId:
          description: This shall be filled, if addressable resource are created by the ASPSP on the /accounts or /card-accounts endpoint.
          type: string
        iban:
          $ref: "#/components/schemas/iban"
        bban:
          $ref: "#/components/schemas/bban"
        pan:
          $ref: "#/components/schemas/pan"
        maskedPan:
          $ref: "#/components/schemas/maskedPan"
        msisdn:
          $ref: "#/components/schemas/msisdn"
        currency:
          $ref: "#/components/schemas/currencyCode"
        name:
          description: Name of the account given by the bank or the PSU in online-banking.
          type: string
          maxLength: 35
        product:
          description: Product name of the bank for this account, proprietary definition.
          type: string
          maxLength: 35
        cashAccountType:
          $ref: "#/components/schemas/cashAccountType"
        status:
          $ref: "#/components/schemas/accountStatus"
        bic:
          $ref: "#/components/schemas/bicfi"
        linkedAccounts:
          description: Case of a set of pending card transactions, the APSP will provide the relevant cash account the card is set up on.
          type: string
          maxLength: 70
        usage:
          description: |
            Specifies the usage of the account:
              * PRIV: private personal account
              * ORGA: professional account
          type: string
          maxLength: 4
          enum:
            - "PRIV"
            - "ORGA"
        details:
          description: |
            Specifications that might be provided by the ASPSP:
              - characteristics of the account
              - characteristics of the relevant card
          type: string
          maxLength: 140
        _links:
          $ref: "#/components/schemas/linksAccountDetails"
        ownerName:
          description: Name of the legal account owner. If there is more than one owner, then e.g. two names might be noted here.
          type: string
          maxLength: 70
        ownerAddress:
          $ref: "#/components/schemas/address"

    accountList:
      description: |
        List of accounts with details.
      type: object
      required:
        - accounts
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/accountDetails"

    accountReference:
      description: |
        Reference to an account by either:
          * IBAN, of a payment accounts, or
          * BBAN, for payment accounts if there is no IBAN, or
          * the Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements, or
          * the Primary Account Number (PAN) of a card in a masked form, or
          * an alias to access a payment account via a registered mobile phone number (MSISDN).
      type: object
      properties:
        iban:
          $ref: "#/components/schemas/iban"
        bban:
          $ref: "#/components/schemas/bban"
        pan:
          $ref: "#/components/schemas/pan"
        maskedPan:
          $ref: "#/components/schemas/maskedPan"
        msisdn:
          $ref: "#/components/schemas/msisdn"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReport:
      description: |
        JSON based account report.
        This account report contains transactions resulting from the query parameters.

        'booked' shall be contained if bookingStatus parameter is set to "booked" or "both".

        'pending' is not contained if the bookingStatus parameter is set to "booked".
      type: object
      required:
        - _links
      properties:
        booked:
          $ref: "#/components/schemas/transactionList"
        pending:
          $ref: "#/components/schemas/transactionList"

    accountStatus:
      description: |
        Account status. The value is one of the following:
          - "enabled": account is available
          - "deleted": account is terminated
          - "blocked": account is blocked e.g. for legal reasons
        If this field is not used, than the account is available in the sense of this specification.
      type: string
      enum:
        - "enabled"
        - "deleted"
        - "blocked"

    address:
      type: object
      required:
        - country
      properties:
        streetName:
          type: string
          maxLength: 70
        buildingNumber:
          type: string
        townName:
          type: string
        postCode:
          type: string
        country:
          $ref: "#/components/schemas/countryCode"
      example:
        {
          street: "rue blue",
          buildingnNumber: "89",
          city: "Paris",
          postalCode: "75000",
          country: "FR"
        }

    amount:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: "#/components/schemas/currencyCode"
        amount:
          $ref: "#/components/schemas/amountValue"
      example:
        {
          "currency": "EUR",
          "amount": "123"
        }

    amountValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.

        **Example:**
        Valid representations for EUR with up to two decimals are:

          * 1056
          * 5768.2
          * -1.50
          * 5877.78
      type: string
      pattern: "-?[0-9]{1,14}(\\\\.[0-9]{1,3})?"
      example: "5877.78"

    bankTransactionCode:
      description: |
        Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022.

        This code type is concatenating the three ISO20022 Codes
          * Domain Code,
          * Family Code, and
          * SubFamiliy Code
        by hyphens, resulting in �DomainCode�-�FamilyCode�-�SubFamilyCode�.
      type: string
      example: "PMNT-RCDT-ESCT"

    bookingDate:
      description: |
        The date when an entry is posted to an account on the ASPSPs books.
      type: string
      format: date

    bban:
      description: |
        Basic Bank Account Number (BBAN) Identifier.

        This data element can be used in the body of the Consent request.
          Message for retrieving Account access Consent from this Account. This
          data elements is used for payment Accounts which have no IBAN.
          ISO20022: Basic Bank Account Number (BBAN).

          Identifier used nationally by financial institutions, i.e., in individual countries,
          generally as part of a National Account Numbering Scheme(s),
          which uniquely identifies the account of a customer.
      type: string
      pattern: "[a-zA-Z0-9]{1,30}"
      example: "BARC12345612345678"

    bicfi:
      description: |
        BICFI
      type: string
      pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
      example: "AAAADEBBXXX"

    cashAccountType:
      description: |
        ExternalCashAccountType1Code from ISO 20022.
      type: string


    countryCode:
      description: ISO 3166 ALPHA2 country code.
      type: string
      pattern: "[A-Z]{2}"
      example: "SE"

    creditorName:
      description: Creditor Name.
      type: string
      maxLength: 70
      example: "Creditor Name"

    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code.
      type: string
      pattern: "[A-Z]{3}"
      example: "EUR"

    debtorName:
      description: Debtor Name.
      type: string
      maxLength: 70
      example: "Debtor Name"

    generalError:
      type: object
      properties:
        code:
          type: string
          example: "ERROR_CODE"
        message:
          type: string
          example: "Error description message"

    hrefType:
      description: Link to a resource.
      type: object
      properties:
        href:
          $ref: "#/components/schemas/hrefEntry"

    hrefEntry:
      description: Link to a resource.
      type: string
      example: "https://www.example.com/path/resource?parameter=value"

    iban:
      type: string
      description: International bank account number ISO 31616.
      pattern: "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
      example: "FR7612345987650123456789014"

    linksAccountDetails:
      description: |
        Links to the account, which can be directly used for retrieving account information from this dedicated account.

        Links to "balances" and/or "transactions"

        These links are only supported, when the corresponding consent has been already granted.
      type: object
      properties:
        balances:
          $ref: "#/components/schemas/hrefType"
        transactions:
          $ref: "#/components/schemas/hrefType"

    maskedPan:
      description: |
        Masked Primary Account Number.
      type: string
      maxLength: 35
      example: "123456xxxxxx1234"

    msisdn:
      type: string
      maxLength: 35
      description: Mobile phone number.
      example: "+49 170 1234567"

    pan:
      description: |
        Primary Account Number according to ISO/IEC 7812.
      type: string
      maxLength: 35
      #According to ISO the following should be valid.
      #maxLength: 19
      #minLength: 8
      #pattern: "[0-9]{8,19}"
      example: "5409050000000000"

    proprietaryBankTransactionCode:
      description: |
        Proprietary bank transaction code as used within a community or within an ASPSP e.g.
        for MT94x based transaction reports.
      type: string
      maxLength: 35

    purposeCode:
      description: |
        ExternalPurpose1Code from ISO 20022.

        Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.

      type: string
      enum:
        - "BKDF"
        - "BKFE"
        - "BKFM"
        - "BKIP"
        - "BKPP"
        - "CBLK"
        - "CDCB"
        - "CDCD"
        - "CDCS"
        - "CDDP"
        - "CDOC"
        - "CDQC"
        - "ETUP"
        - "FCOL"
        - "MTUP"
        - "ACCT"
        - "CASH"
        - "COLL"
        - "CSDB"
        - "DEPT"
        - "INTC"
        - "LIMA"
        - "NETT"
        - "BFWD"
        - "CCIR"
        - "CCPC"
        - "CCPM"
        - "CCSM"
        - "CRDS"
        - "CRPR"
        - "CRSP"
        - "CRTL"
        - "EQPT"
        - "EQUS"
        - "EXPT"
        - "EXTD"
        - "FIXI"
        - "FWBC"
        - "FWCC"
        - "FWSB"
        - "FWSC"
        - "MARG"
        - "MBSB"
        - "MBSC"
        - "MGCC"
        - "MGSC"
        - "OCCC"
        - "OPBC"
        - "OPCC"
        - "OPSB"
        - "OPSC"
        - "OPTN"
        - "OTCD"
        - "REPO"
        - "RPBC"
        - "RPCC"
        - "RPSB"
        - "RPSC"
        - "RVPO"
        - "SBSC"
        - "SCIE"
        - "SCIR"
        - "SCRP"
        - "SHBC"
        - "SHCC"
        - "SHSL"
        - "SLEB"
        - "SLOA"
        - "SWBC"
        - "SWCC"
        - "SWPT"
        - "SWSB"
        - "SWSC"
        - "TBAS"
        - "TBBC"
        - "TBCC"
        - "TRCP"
        - "AGRT"
        - "AREN"
        - "BEXP"
        - "BOCE"
        - "COMC"
        - "CPYR"
        - "GDDS"
        - "GDSV"
        - "GSCB"
        - "LICF"
        - "MP2B"
        - "POPE"
        - "ROYA"
        - "SCVE"
        - "SERV"
        - "SUBS"
        - "SUPP"
        - "TRAD"
        - "CHAR"
        - "COMT"
        - "MP2P"
        - "ECPG"
        - "ECPR"
        - "ECPU"
        - "EPAY"
        - "CLPR"
        - "COMP"
        - "DBTC"
        - "GOVI"
        - "HLRP"
        - "HLST"
        - "INPC"
        - "INPR"
        - "INSC"
        - "INSU"
        - "INTE"
        - "LBRI"
        - "LIFI"
        - "LOAN"
        - "LOAR"
        - "PENO"
        - "PPTI"
        - "RELG"
        - "RINP"
        - "TRFD"
        - "FORW"
        - "FXNT"
        - "ADMG"
        - "ADVA"
        - "BCDM"
        - "BCFG"
        - "BLDM"
        - "BNET"
        - "CBFF"
        - "CBFR"
        - "CCRD"
        - "CDBL"
        - "CFEE"
        - "CGDD"
        - "CORT"
        - "COST"
        - "CPKC"
        - "DCRD"
        - "DSMT"
        - "DVPM"
        - "EDUC"
        - "FACT"
        - "FAND"
        - "FCPM"
        - "FEES"
        - "GOVT"
        - "ICCP"
        - "IDCP"
        - "IHRP"
        - "INSM"
        - "IVPT"
        - "MCDM"
        - "MCFG"
        - "MSVC"
        - "NOWS"
        - "OCDM"
        - "OCFG"
        - "OFEE"
        - "OTHR"
        - "PADD"
        - "PTSP"
        - "RCKE"
        - "RCPT"
        - "REBT"
        - "REFU"
        - "RENT"
        - "REOD"
        - "RIMB"
        - "RPNT"
        - "RRBN"
        - "RVPM"
        - "SLPI"
        - "SPLT"
        - "STDY"
        - "TBAN"
        - "TBIL"
        - "TCSC"
        - "TELI"
        - "TMPG"
        - "TPRI"
        - "TPRP"
        - "TRNC"
        - "TRVC"
        - "WEBI"
        - "ANNI"
        - "CAFI"
        - "CFDI"
        - "CMDT"
        - "DERI"
        - "DIVD"
        - "FREX"
        - "HEDG"
        - "INVS"
        - "PRME"
        - "SAVG"
        - "SECU"
        - "SEPI"
        - "TREA"
        - "UNIT"
        - "FNET"
        - "FUTR"
        - "ANTS"
        - "CVCF"
        - "DMEQ"
        - "DNTS"
        - "HLTC"
        - "HLTI"
        - "HSPC"
        - "ICRF"
        - "LTCF"
        - "MAFC"
        - "MARF"
        - "MDCS"
        - "VIEW"
        - "CDEP"
        - "SWFP"
        - "SWPP"
        - "SWRS"
        - "SWUF"
        - "ADCS"
        - "AEMP"
        - "ALLW"
        - "ALMY"
        - "BBSC"
        - "BECH"
        - "BENE"
        - "BONU"
        - "CCHD"
        - "COMM"
        - "CSLP"
        - "GFRP"
        - "GVEA"
        - "GVEB"
        - "GVEC"
        - "GVED"
        - "GWLT"
        - "HREC"
        - "PAYR"
        - "PEFC"
        - "PENS"
        - "PRCP"
        - "RHBS"
        - "SALA"
        - "SSBE"
        - "LBIN"
        - "LCOL"
        - "LFEE"
        - "LMEQ"
        - "LMFI"
        - "LMRK"
        - "LREB"
        - "LREV"
        - "LSFL"
        - "ESTX"
        - "FWLV"
        - "GSTX"
        - "HSTX"
        - "INTX"
        - "NITX"
        - "PTXP"
        - "RDTX"
        - "TAXS"
        - "VATX"
        - "WHLD"
        - "TAXR"
        - "B112"
        - "BR12"
        - "TLRF"
        - "TLRR"
        - "AIRB"
        - "BUSB"
        - "FERB"
        - "RLWY"
        - "TRPT"
        - "CBTV"
        - "ELEC"
        - "ENRG"
        - "GASB"
        - "NWCH"
        - "NWCM"
        - "OTLC"
        - "PHON"
        - "UBIL"
        - "WTER"

    remittanceInformationUnstructured:
      description: |
        Unstructured remittance information.
      type: string
      maxLength: 140
      example: "Ref Number Merchant"

    reportExchangeRateList:
      description: Array of exchange rates.
      type: array
      items:
        $ref: "#/components/schemas/reportExchangeRate"

    reportExchangeRate:
      description: Exchange Rate.
      type: object
      required:
        - sourceCurrency
        - exchangeRate
        - unitCurrency
        - targetCurrency
        - quotationDate
      properties:
        sourceCurrency:
          $ref: "#/components/schemas/currencyCode"
        exchangeRate:
          type: string
        unitCurrency:
          type: string
        targetCurrency:
          $ref: "#/components/schemas/currencyCode"
        quotationDate:
          type: string
          format: date
        contractIdentification:
          type: string

    transactionDetails:
      description: Transaction details.
      type: object
      required:
        - transactionAmount
      properties:
        transactionId:
          description: |
            the Transaction Id can be used as access-ID in the API, where more details on an transaction is offered.
            If this data attribute is provided this shows that the AIS can get access on more details about this
            transaction using the Get transaction details request.
          type: string
        entryReference:
          description: |
            Is the identification of the transaction as used e.g. for reference for deltafunction on application level.
            The same identification as for example used within camt.05x messages.
          type: string
          maxLength: 35
        endToEndId:
          description: Unique end to end identity.
          type: string
          maxLength: 35
        mandateId:
          description: Identification of Mandates, e.g. a SEPA Mandate ID.
          type: string
          maxLength: 35
        checkId:
          description: Identification of a Cheque.
          type: string
          maxLength: 35
        creditorId:
          description: Identification of Creditors, e.g. a SEPA Creditor ID.
          type: string
          maxLength: 35
        bookingDate:
          $ref: "#/components/schemas/bookingDate"
        valueDate:
          description: The Date at which assets become available to the account owner in case of a credit.
          type: string
          format: date
        transactionAmount:
          $ref: "#/components/schemas/amount"
        currencyExchange:
          $ref: "#/components/schemas/reportExchangeRateList"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAccount:
          $ref: "#/components/schemas/accountReference"
        ultimateCreditor:
          $ref: "#/components/schemas/ultimateCreditor"
        debtorName:
          $ref: "#/components/schemas/debtorName"
        debtorAccount:
          $ref: "#/components/schemas/accountReference"
        ultimateDebtor:
          $ref: "#/components/schemas/ultimateDebtor"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        remittanceInformationStructured:
          description: |
            Reference as contained in the structured remittance reference structure (without the surrounding XML structure).

            Different from other places the content is containt in plain form not in form of a structered field.
          type: string
          maxLength: 140
        additionalInformation:
          description: |
            Might be used by the ASPSP to transport additional transaction related information to the PSU.
          type: string
          maxLength: 512
        purposeCode:
          $ref: "#/components/schemas/purposeCode"
        bankTransactionCode:
          $ref: "#/components/schemas/bankTransactionCode"
        proprietaryBankTransactionCode:
          $ref: "#/components/schemas/proprietaryBankTransactionCode"

    transactionList:
      description: Array of transaction details.
      type: array
      items:
        $ref: "#/components/schemas/transactionDetails"

    transactionsResponse:
      description: |
        Body of the JSON response for a successful read transaction list request.
        This account report contains transactions resulting from the query parameters.
      type: object
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        transactions:
          $ref: "#/components/schemas/accountReport"

    ultimateCreditor:
      description: Ultimate Creditor.
      type: string
      maxLength: 70
      example: "Ultimate Creditor"

    ultimateDebtor:
      description: Ultimate Debtor.
      type: string
      maxLength: 70
      example: "Ultimate Debtor"

