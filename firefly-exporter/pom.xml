<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.adorsys.opba</groupId>
		<artifactId>open-banking-gateway</artifactId>
		<version>0.20.0.1</version>
	</parent>

	<artifactId>fireflyexporter</artifactId>
	<name>fireflyexporter</name>
	<description>OpenBanking to FireFly III exporter</description>

	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>Hoxton.SR8</spring-cloud.version>

		<swagger-codegen-generators.version>1.0.19</swagger-codegen-generators.version>
		<swagger-codegen-maven-plugin.version>3.0.19</swagger-codegen-maven-plugin.version>
		<io.swagger.annotations.version>1.6.2</io.swagger.annotations.version>

		<main.basedir>..</main.basedir>
		<tpp-bank-search-location>
			${main.basedir}/opba-banking-rest-api/src/main/resources/static/tpp_banking_api_bank_search.yml
		</tpp-bank-search-location>
		<tpp-bank-search-prefix>de.adorsys.opba.tpp.banksearch</tpp-bank-search-prefix>
		<tpp-ais-location>
			${main.basedir}/opba-banking-rest-api/src/main/resources/static/tpp_banking_api_ais.yml
		</tpp-ais-location>
		<tpp-ais-prefix>de.adorsys.opba.tpp.ais</tpp-ais-prefix>

		<firefly-api-location>src/main/resources/firefly/firefly-api.yml</firefly-api-location>
		<firefly-api-prefix>de.adorsys.opba.firefly</firefly-api-prefix>
	</properties>

	<dependencies>
		<dependency>
			<groupId>de.adorsys.opba</groupId>
			<artifactId>opba-api-security</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${io.swagger.annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${swagger-codegen-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>bankSearch</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${tpp-bank-search-location}</inputSpec>
							<language>spring</language>
							<output>${project.build.directory}/generated-sources/open-api/</output>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<basePackage>${tpp-bank-search-prefix}.api.generated</basePackage>
								<configPackage>${tpp-bank-search-prefix}.api.config.generated</configPackage>
								<modelPackage>${tpp-bank-search-prefix}.api.model.generated</modelPackage>
								<apiPackage>${tpp-bank-search-prefix}.api.resource.generated</apiPackage>
								<invokerPackage>${tpp-bank-search-prefix}.client.generated</invokerPackage>
								<interfaceOnly>true</interfaceOnly>
								<skipOverwrite>true</skipOverwrite>
								<dateLibrary>java8</dateLibrary>
								<java8>false</java8>
								<useTags>true</useTags>
								<defaultInterfaces>false</defaultInterfaces>
								<implicitHeaders>false</implicitHeaders>
								<generateForOpenFeign>true</generateForOpenFeign>
								<library>spring-cloud</library>
								<swaggerDocketConfig>false</swaggerDocketConfig>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>ais</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${tpp-ais-location}</inputSpec>
							<language>spring</language>
							<output>${project.build.directory}/generated-sources/open-api/</output>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<basePackage>${tpp-ais-prefix}.api.generated</basePackage>
								<configPackage>${tpp-ais-prefix}.api.config.generated</configPackage>
								<modelPackage>${tpp-ais-prefix}.api.model.generated</modelPackage>
								<apiPackage>${tpp-ais-prefix}.api.resource.generated</apiPackage>
								<invokerPackage>${tpp-ais-prefix}.client.generated</invokerPackage>
								<interfaceOnly>true</interfaceOnly>
								<skipOverwrite>true</skipOverwrite>
								<dateLibrary>java8</dateLibrary>
								<java8>false</java8>
								<useTags>true</useTags>
								<defaultInterfaces>false</defaultInterfaces>
								<implicitHeaders>false</implicitHeaders>
								<generateForOpenFeign>true</generateForOpenFeign>
								<library>spring-cloud</library>
								<swaggerDocketConfig>false</swaggerDocketConfig>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>firefly-iii</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${firefly-api-location}</inputSpec>
							<language>spring</language>
							<output>${project.build.directory}/generated-sources/open-api/</output>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<basePackage>${firefly-api-prefix}.api.generated</basePackage>
								<configPackage>${firefly-api-prefix}.api.config.generated</configPackage>
								<modelPackage>${firefly-api-prefix}.api.model.generated</modelPackage>
								<apiPackage>${firefly-api-prefix}.api.resource.generated</apiPackage>
								<invokerPackage>${firefly-api-prefix}.client.generated</invokerPackage>
								<interfaceOnly>true</interfaceOnly>
								<skipOverwrite>true</skipOverwrite>
								<dateLibrary>java8</dateLibrary>
								<java8>false</java8>
								<useTags>true</useTags>
								<defaultInterfaces>false</defaultInterfaces>
								<implicitHeaders>false</implicitHeaders>
								<generateForOpenFeign>true</generateForOpenFeign>
								<library>spring-cloud</library>
								<swaggerDocketConfig>false</swaggerDocketConfig>
							</configOptions>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.swagger.codegen.v3</groupId>
						<artifactId>swagger-codegen-generators</artifactId>
						<version>${swagger-codegen-generators.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>