server:
  port: 8085

spring:
  datasource:
    url: jdbc:tc:postgresql:12:////open_banking?TC_DAEMON=true&?TC_TMPFS=/testtmpfs:rw&TC_INITSCRIPT=init.sql
    username: postgres
    password: docker
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    hikari:
      schema: banking_protocol
  jpa:
    hibernate:
      naming:
        physical-strategy: de.adorsys.opba.db.hibernate.PrefixAndSnakeCasePhysicalNamingStrategy
      # DDL is handled by Liquibase
      ddl-auto: validate
    open-in-view: false
  liquibase:
    enabled: true
    change-log: classpath:migration/master.xml
    parameters:
      table-prefix: opb_
      adorsys-sandbox-url: http://localhost:20014
      fill-with-mock-data: true

# Unused in the protocol, but imported through opba-db and expected to be injected by spring
bank-search:
  query:

protocol:
  redirect:
    consent-accounts:
      ok:  ${protocol.gateway-base-url}/v1/consent/#{context.getAuthorizationSessionIdIfOpened()}/fromAspsp/STUB_STATE/ok?redirectCode=#{context.getAspspRedirectCode()}
      nok: ${protocol.gateway-base-url}/v1/consent/#{context.getAuthorizationSessionIdIfOpened()}/fromAspsp/STUB_STATE/nok?redirectCode=#{context.getAspspRedirectCode()}
    parameters:
      max-array-size: 32
      provide-more: ${protocol.embedded-ui-base-url}/parameters/provide-more/#{execution.getId()}?q=#{urlSafe(context.getViolations().toString())}
      provide-psu-password: ${protocol.embedded-ui-base-url}/parameters/provide-psu-password/#{execution.getId()}
      select-sca-method: ${protocol.embedded-ui-base-url}/parameters/select-sca-method/#{execution.getId()}?q=#{urlSafe(context.getAvailableSca().toString())}
      report-sca-result: ${protocol.embedded-ui-base-url}/parameters/report-sca-result/#{execution.getId()}?q=#{urlSafe(context.getScaSelected().getAuthenticationType() + ":" + context.getScaSelected().getName())}
  gateway-base-url: http://localhost:8085
  embedded-ui-base-url: http://localhost:5500

pkcs12:
  keyStore: sample-qwac.keystore
  password: password

facade:
  encryption:
    providerName: BC
    algorithm: PBEWithSHA256And256BitAES-CBC-BC
    saltLength: 8
    iterationCount: 1024
    keySetPath: example-keyset.json

flowable:
  process-definition-location-prefix: classpath*:/processes/**/
