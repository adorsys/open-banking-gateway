spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/open_banking?currentSchema=banking_protocol
    username: postgres
    password: docker
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: banking_protocol
  jpa:
    hibernate:
      naming:
        physical-strategy: de.adorsys.opba.core.protocol.config.hibernate.PrefixAndSnakeCasePhysicalNamingStrategy
      # DDL is handled by Liquibase
      ddl-auto: validate
    open-in-view: false
  liquibase:
    enabled: true
    change-log: classpath:migration/master.xml
    parameters:
      table-prefix: opb_
      fill-with-mock-data: true

protocol:
  redirect:
    consent-accounts:
      ok: 'http://localhost:8080/v1/consents/confirm/accounts/#{context.getAction()}/sagas/#{execution.getRootProcessInstanceId()}'
      nok: 'http://localhost:8080/v1/consents/failed/accounts/#{context.getAction()}/sagas/#{execution.getRootProcessInstanceId()}'
    parameters:
      provide-more: 'http://localhost:5500/parameters/provide-more/#{execution.getId()}?q=#{urlSafe(context.getViolations().toString())}'
      provide-psu-password: 'http://localhost:5500/parameters/provide-psu-password/#{execution.getId()}'
      select-sca-method: 'http://localhost:5500/parameters/select-sca-method/#{execution.getId()}?q=#{urlSafe(context.getAvailableSca().toString())}'
      report-sca-result: 'http://localhost:5500/parameters/report-sca-result/#{execution.getId()}?q=#{urlSafe(context.getScaSelected().getAuthenticationType() + ":" + context.getScaSelected().getName())}'

pkcs12:
  keyStore: sample-qwac.keystore
  password: password

xs2a-profile:
  id: 53c47f54-b9a4-465a-8f77-bc6cd5f0cf46
  aspspName: adorsys xs2a
  bic: ADORSYS
  url: http://localhost:20014
  adapterId: adorsys-integ-adapter
  idpUrl:
  aspspScaApproaches:

flowable:
  process-definition-location-prefix: classpath*:/processes/**/

bank-search:
  start: 0
  max: 10

