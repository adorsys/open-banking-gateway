@startuml
legend top left
  <b>Reading account list when consent is present</b>
endlegend

actor FinTech

collections TppBackend

box "TPP API"
control TppBankingApiAisController
control ConsentServiceController
participant FacadeResponseMapper
endbox

box "OPBA-Facade"
collections FacadeService
database Database
participant ServiceContextProvider
participant ProtocolSelector
participant Spring
participant ProtocolResultHandler
endbox

box "XS2A-Protocol"
participant Xs2aListAccountsEntrypoint
participant Xs2aUpdateAuthorization
participant Xs2aFromAspspRedirect
participant Xs2aResultBodyExtractor
collections Xs2aServices
participant OutcomeMapper
endbox

boundary ASPSP

== Fintech calls user account list within same session id ==

FinTech -> TppBackend : GET /accounts\n with <b>service session id</b> and Fintech user info, bank id, etc.
TppBackend -> TppBankingApiAisController : getAccounts
TppBankingApiAisController -> FacadeService : Facade.execute()
FacadeService -> ServiceContextProvider : Create facade context from request
FacadeService <- ServiceContextProvider : ServiceContext
FacadeService -> ProtocolSelector : Select bank protocol from request type and bank id
ProtocolSelector -> FacadeService : BankProtocol
FacadeService -> Spring : Find bean - Bean(BankProtocol.protocolBeanName) extends Action
FacadeService <- Spring : It is Xs2aListAccountsEntrypoint service bean
FacadeService -> Xs2aListAccountsEntrypoint : Xs2aListAccountsEntrypoint.execute(ServiceContext)
Xs2aListAccountsEntrypoint -> Database : Consent for service session
Xs2aListAccountsEntrypoint <- Database : Consent present, <b>consent context</b>
Xs2aServices -> Xs2aServices : Validate <b>consent context</b> -\ndo we have enough data (Mocked execution)
Xs2aServices -> ASPSP : Call ASPSP with consent using <b>consent context</b>
ASPSP -> Xs2aServices : Users' accounts
Xs2aServices -> OutcomeMapper : Translate ASPSP response
OutcomeMapper -> Xs2aResultBodyExtractor : Translate ASPSP response
Xs2aResultBodyExtractor -> OutcomeMapper : Account list
OutcomeMapper -> Xs2aListAccountsEntrypoint
Xs2aListAccountsEntrypoint -> FacadeService : SuccessResult<Account list>
Xs2aFromAspspRedirect -> FacadeService : SuccessResult<Account list>
FacadeService -> ProtocolResultHandler : Translate SuccessResult -> FacadeSuccessResult
ProtocolResultHandler -> TppBankingApiAisController : process FacadeSuccessResult
TppBankingApiAisController -> FacadeResponseMapper : translate FacadeSuccessResult
FacadeResponseMapper -> TppBankingApiAisController : This is 200 code with Account list body
TppBankingApiAisController -> TppBackend : 200 and Account list
TppBackend -> FinTech : 200 and Account list
@enduml
