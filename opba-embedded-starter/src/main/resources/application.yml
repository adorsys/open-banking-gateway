server:
  port: 8085
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/open_banking?currentSchema=banking_protocol
    username: postgres
    password: docker
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: banking_protocol
  jpa:
    hibernate:
      naming:
        physical-strategy: de.adorsys.opba.db.hibernate.PrefixAndSnakeCasePhysicalNamingStrategy
      # DDL is handled by Liquibase
      ddl-auto: validate
    open-in-view: false
  liquibase:
    enabled: true
    change-log: classpath:migration/master.xml
    parameters:
      table-prefix: opb_
      adorsys-sandbox-url: http://localhost:20014
      fill-with-mock-data: true

# Actuator:
management:
  info:
    git:
      mode: full

# Application configuration
api:
  banking:
    # Bank-search API properties
    bank-search:
      start: 0
      max: 10
      query:
        "SELECT id, uuid, name, bic, bank_code, word_similarity(:keyword, name) as sml
        FROM opb_bank WHERE word_similarity(:keyword, name) >= 0.6
        UNION
        SELECT id, uuid, name, bic, bank_code, word_similarity(:keyword, bic) as sml
        FROM opb_bank WHERE word_similarity(:keyword, bic) >= 0.8
        UNION
        SELECT id, uuid, name, bic, bank_code, word_similarity(:keyword, bank_code) as sml
        FROM opb_bank WHERE word_similarity(:keyword, bank_code) >= 0.8
        ORDER BY sml DESC, id
        LIMIT :max
        OFFSET :start"
    # Signature-based security of FinTech consumable API
    security:
      verification:
        request-validity-window: 5m
        claim-name-key: sign-data
        # Known API consumers
        consumer-public-keys:
          MY-SUPER-FINTECH-ID: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0QhZVg5KKh9YzXFT8kuTdsxYHgJ2us+idNym+L4P09O5BjJaIZPbx7jBCKf8CNLNMV+HuNa6aPwETIyGsYG9reJAupA+F0ETxzDZ/70zprnte0eEfitwA2fy3lq0VOwtb2NuaRQBAcJZC+Dni3UAjR4bfWblw+OzWSrhj8wNicyRgE/ov8bFiyhqYZrBx1NW8oQcSC5EXmevu3nna3izlBbZ/63OteHHZUmbyufW7hU6Ck9lq/cP4QMKmiMDj020ptwox9g4hCcwy0iL+qIcpGe6gfuBMMtt9XQnRuxIQeOQ8rYq2uaU6iOgj3vbSekqwrOCtKf/MooEcEGSvIa+EwIDAQAB
          ANOTHER-FINTECH-ID: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDJ6ETZBHHSFNUAvpKuRhzzOi2HuupfTnttJdZhYsPHTE1XPlo4D2RDhjDLECMXMmJNwKS1p1xZ/p836RhhVJ/lWTNXqAxRF3nfvvQXirROP91LPjyOQIF7IoS+Wm7VquJlKRR7/+tmJMSOwyf5727M0Wttfrsj/w/UVOhYlsUtKwIDAQAB
  # General (non-banking) API security
  security:
    token-validity-duration: PT5M # PLEASE SYNC api.security.token-validity-duration, api.cookie.max-age and facade.expirable.expire-after-write
    jws-algo: RS256
    # Example private-public keypair for DEMO-purposes. Generated using TokenSignVerifyTest.generateNewTppKeyPair(). Production use should load private key from secure place.
    private-key: MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC7wtbVBBDWlZSV7JsDgEHBTHBT0FH0YZh96WwFPyg88Iqsif1Xv38ZoGqcHhYLswyzFiNyEuZWblza1v05LX+pW4oU0Pi/ITX4biUQr5pFquSVV0qOBYOf0JCzxIDsKK1TiFxhz3CRFZ+1DXc0x5ZJASqKxOwVf+rCSKI3yB0Z76+AJUfRb0yiLvMW38iWkC79WJcyXXHkD8OGEvyJadbsipQxxDOGjzM0fa/vBzd8EeRcpC8fsxfH/d8WJ4oB7f26eW2dTY2wKahlgaKyjmmc7DITrPF8nRW39hH54DDbtaTyWCX6v3jg9iwcgYkB9AWLYYxzyR4n2VubGBXpizhrAgMBAAECggEAeR6Cvv7Ubdgn9V6f0G5X/H12qFplw6OBXxfIWsoXBtiUXCDXkFczgjB9FSBDUGC7/Hp3ewq+E1s2AuVUjCHRjEpElJEJJSIjUpKazly4w+AtfDjHGz5rXhiIf65vC+hhhtUb4uyRzMWKNJzvHNjzFTzvWH0XXfcaVSHNovYv754VjGzwtdhgj0w8QYRsCq4evBsRCl+POuJdKYv9BDYj3ADffVgDU0Txs8Q2lYvm16V0Ihgbcd6Dq4WblZY3Bkh0s9WpZVZdIy/R6bLWx1BSJwHiT267Oiq0U+REW4J584FryIrsqMTNJPjEbybEskniCujHxkGnRixO1BJZPvdIwQKBgQD1Zd4oNhO7SVX8H2+bYTEjKxZYSA2B6E+7pWGn1d4cOX2jjNhj1SQkLfWXQg4JFljTh9pL3K0moL8MkrLoYq+TTqEngMh7OJtEYySbec5ZSA6MM36VDYbHyNvjKHPrzwtzzbbYOqFXF8OZT5Eq9X+jQTmqcmGnYipmcWPRdK1J4wKBgQDD34Au37qsEM6f7VVm7zY/hXb+bZ1px6nkS+QuW2hp270brENq3LNtcA3oUX8yr/X8H9OEyO7+oevFcEkHRyDMce80VrO1UytXVQDo7nF6vepbPYy8u/rF/FLicrkLPoqQCDnL+NYVtnZo/oaXfw506VMBbU20+Yt3eUoxN2m92QKBgHyO3UmJ0VAh9DwJ9MtodNmF+EyNHhYPRdFYK45WNuwanlQSnI9n03VtwpepFpi0OBf+f+Y7t8PAmdiW6aqc1MOviIsVii1JWT5IGH+2PvAAbCnrxVeAyyXDJSFTGivaJtT72NA+SkB7tnOt+GBWxhemds+2SSz93cmryl+5mm/DAoGBAKafS+WUALI6oeq99DZaK6WhnXYWPSAs70L7pCIjNBFJEfemdLtE/4WLGumT2kZ+FRzi3gZI/7WwfGY6fIUqZqZEDZ5SWxFWrLnf36RGolYtlF0FYOF0b4FYghGMUglUrH6V4MS46zURQG1Uh538QYoGqcu+9amL1q5NiWWQo+0RAoGBAO+gk6lD3U1gUqAzSo3ri8gszk2Jopky+lIUy9y3ebsFsc3EetT7A/OgiSj4KZAgHKJiCesbq1OL7VeTGpsl0dqXPNW2Mh+xVVMJHGJ7ydZ8lvlNGQTNSvBwZwjJBsZMHCSgjdOGDF88NJKo2/Bjlhdg7tWp2qTkTVm7hTdYUY4+
    public-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu8LW1QQQ1pWUleybA4BBwUxwU9BR9GGYfelsBT8oPPCKrIn9V79/GaBqnB4WC7MMsxYjchLmVm5c2tb9OS1/qVuKFND4vyE1+G4lEK+aRarklVdKjgWDn9CQs8SA7CitU4hcYc9wkRWftQ13NMeWSQEqisTsFX/qwkiiN8gdGe+vgCVH0W9Moi7zFt/IlpAu/ViXMl1x5A/DhhL8iWnW7IqUMcQzho8zNH2v7wc3fBHkXKQvH7MXx/3fFieKAe39unltnU2NsCmoZYGiso5pnOwyE6zxfJ0Vt/YR+eAw27Wk8lgl+r944PYsHIGJAfQFi2GMc8keJ9lbmxgV6Ys4awIDAQAB
    sign-algo: RSA
    endpoint:
      allowed-path:
        AIS: "/v1/banking/ais"
        PIS: "/v1/banking/pis"
        BANK_SEARCH: "/v1/banking/search"
        CONFIRM_CONSENT: "/v1/banking/consents"

  # Common cookie template
  cookie:
    secure: false # localhost-only - TODO application-dev.yml for dev env?
    max-age: ${api.security.token-validity-duration} # PLEASE SYNC api.security.token-validity-duration, api.cookie.max-age and facade.expirable.expire-after-write
    http-only: true
    path: /
    same-site: Lax

facade:
  urls:
    embedded-ui-base-url: http://localhost:4200
    redirect:
      # Redirection URL for consent association
      consent-login:
        page: ${facade.urls.embedded-ui-base-url}/ais/{authorizationSessionId}/login?redirectCode={fintechUserTempPassword}
        password:
          byte-size: 8
    # Consent authorization cookie key path
    authorization-session-key:
      cookie:
        path-templates: /embedded-server/v1/consent/{authorizationSessionId}, /embedded-server/v1/psu/ais/{authorizationSessionId}/renewal-authorization-session-key
  expirable:
    expire-after-write: PT5M # PLEASE SYNC api.security.token-validity-duration, api.cookie.max-age and facade.expirable.expire-after-write

  encryption:
    # Consent encryption keys protection settings
    datasafe:
      read-keystore:
        psu: I-M-A-SAMPLE-PSU-PASSWORD-REPLACE-ME
        fintech: I-M-A-SAMPLE-FINTECH-PASSWORD-REPLACE-ME
        fintech-user: I-M-A-SAMPLE-FINTECH-USER-PASSWORD-REPLACE-ME
    # PSU consent encryption
    psu:
      key-pair:
        cipher-algo: AES256_CBC
        key-algo: RSA
        len: 2048
    # Consent requirements encryption
    consent-spec:
      secret-key:
        key-algo: AES
        cipher-algo: AES/GCM/NoPadding
        iv-size: 12
        len: 128

protocol:
  xs2a:
    urls:
      redirect:
        ais:
          to-aspsp: ${facade.urls.embedded-ui-base-url}/ais/#{context.getAuthorizationSessionIdIfOpened()}/to-aspsp-redirection
          consent-accounts:
            ok: ${facade.urls.embedded-ui-base-url}/embedded-server/v1/consent/#{context.getAuthorizationSessionIdIfOpened()}/fromAspsp/STUB_STATE/ok?redirectCode=#{context.getAspspRedirectCode()}
            nok: ${facade.urls.embedded-ui-base-url}/embedded-server/v1/consent/#{context.getAuthorizationSessionIdIfOpened()}/fromAspsp/STUB_STATE/nok?redirectCode=#{context.getAspspRedirectCode()}
            result: ${facade.urls.embedded-ui-base-url}/ais/#{context.getAuthorizationSessionIdIfOpened()}/consent-result?redirectCode=#{context.getRedirectCodeIfAuthContinued()}
          parameters:
            max-array-size: 32
            provide-more: ${facade.urls.embedded-ui-base-url}/ais/#{context.getAuthorizationSessionIdIfOpened()}?redirectCode=#{context.getRedirectCodeIfAuthContinued()}
            provide-psu-password: ${facade.urls.embedded-ui-base-url}/ais/#{context.getAuthorizationSessionIdIfOpened()}/authenticate?wrong=#{context.getWrongAuthCredentials()}
            select-sca-method: ${facade.urls.embedded-ui-base-url}/ais/#{context.getAuthorizationSessionIdIfOpened()}/select-sca-method
            report-sca-result: ${facade.urls.embedded-ui-base-url}/ais/#{context.getAuthorizationSessionIdIfOpened()}/sca-result?wrong=#{context.getWrongAuthCredentials()}
            provide-psu-iban: ${facade.urls.embedded-ui-base-url}/ais/#{context.getAuthorizationSessionIdIfOpened()}/entry-consent-transactions/dedicated-account-access?wrong=#{context.getWrongAuthCredentials()}
        pis:
          to-aspsp: ${facade.urls.embedded-ui-base-url}/pis/#{context.getAuthorizationSessionIdIfOpened()}/to-aspsp-redirection
          payments:
            ok:  ${facade.urls.embedded-ui-base-url}/pis/#{context.getAuthorizationSessionIdIfOpened()}/fromAspsp/STUB_STATE/ok?redirectCode=#{context.getAspspRedirectCode()}
            nok: ${facade.urls.embedded-ui-base-url}/pis/#{context.getAuthorizationSessionIdIfOpened()}/fromAspsp/STUB_STATE/nok?redirectCode=#{context.getAspspRedirectCode()}
            result: ${facade.urls.embedded-ui-base-url}/pis/#{context.getAuthorizationSessionIdIfOpened()}/consent-result?redirectCode=#{context.getRedirectCodeIfAuthContinued()}
    aspspmessages:
      invalid-credentials: PSU_CREDENTIALS_INVALID
      invalid-consent: FORMAT_ERROR
    pkcs12:
      keystore: sample-qwac.keystore
      password: password

# Flowable comes for all protocols shared
bpmnshared:
  flowable:
    serialization:
      serialize-only-packages:
        - de.adorsys.opba.protocol.bpmnshared.dto.context
        - de.adorsys.opba.protocol.xs2a.context
        - de.adorsys.opba.protocol.hbci.context
    expirable:
      expire-after-write: PT600S
flowable:
  process-definition-location-prefix: classpath*:/processes/**/
