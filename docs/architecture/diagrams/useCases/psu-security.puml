@startuml

autonumber "<b><color blue>[Sec-000]</color></b>"
actor "psu" as psu
box "psuUserAgent" #LightGray
    participant "FinTechUI" as FinTechUI
    participant "ConsentAuthorisationUI" as ConsentAuthorisationUI
    'participant "OnlineBankingUI" as OnlineBankingUI
end box
box "FinTechDC" #DarkSeaGreen
    participant "FinTechApi" as FinTechApi
end box
box "TppDC" #LightGray
    participant "TppBankingApi" as TppBankingApi
    'participant "TppBankSearchApi" as TppBankSearchApi
    participant "ConsentAuthorisationApi" as ConsentAuthorisationApi

    'participant "RedirectSessionStoreApi" as RedirectSessionStoreApi
    participant "BankingProtocolFacade" as BankingProtocolFacade
    'participant "BankingProtocol" as BankingProtocol
end box
box "AspspDC" #LightSkyBlue
	participant "AspspBankingApi" as AspspBankingApi
    'participant "OnlineBankingApi" as OnlineBankingApi
end box

psu -> FinTechUI ++ : login
FinTechUI -> FinTechApi ++ : login
FinTechApi -> TppBankingApi ++ : service(psu-id@fintech,PsuFinTechPassword)
TppBankingApi -> BankingProtocolFacade ++ : service(psu-id@fintech,PsuFinTechPassword)
BankingProtocolFacade -> BankingProtocolFacade : registerFinTechUser():\nPsuFinTechPublicKey,\nEncryptedPsuFinTechDataStore \n[Keystore,Inbox]
BankingProtocolFacade -> BankingProtocolFacade : PsuFinTechDataStore.storeRequestParams():\nRequest params stored elsewhere but\nencrypted with PsuFinTechSecretKey
return 202_RedirectToConsent(redirectCode,auth-id)
return 202_RedirectToConsent(redirectCode,auth-id)
return 202_RedirectToConsent[RedirectCookie]\n()<redirectCode,auth-id>
FinTechUI -> FinTechUI : storeRedirectCookie(auth-id,RedirectCookie)
FinTechUI -> ConsentAuthorisationUI ++ : activateUI(redirectCode)
== Here Bob tric psu to login to the consent autorize ui ==
ConsentAuthorisationUI -> psu : login
psu -> ConsentAuthorisationUI : enterLoginData()
ConsentAuthorisationUI -> ConsentAuthorisationApi ++ : login(PsuTppLoginData, redirectCode)
ConsentAuthorisationApi -> BankingProtocolFacade ++ : tppLogin(PsuTppLoginData, redirectCode)
BankingProtocolFacade -> BankingProtocolFacade : checkLoginData():PsuTppDataStore
BankingProtocolFacade -> BankingProtocolFacade : lookupPsuFinTechDataStore(redirectCode):PsuFinTechDataStore
BankingProtocolFacade -> BankingProtocolFacade : PsuFinTechDataStore.inbox(PsuTppEncryptionKey): authCode
return 202_RedirectToFinTech<auth-id,authCode>
return 202_RedirectToFinTech<auth-id,authCode>
return activateFinTechUI(auth-id,authCode)
FinTechUI -> FinTechUI : loadRedirectCookie(auth-id):RedirectCookie
FinTechUI -> FinTechApi ++ : fromConsentOk[RedirectCookie]()<authCode>
== This is the confirmation step in the normal case. It is like the oAuth authorization code ==
FinTechApi -> TppBankingApi ++ : associateIdentity(auth-id, authCode, PsuFinTechPassword)
TppBankingApi -> BankingProtocolFacade ++ : associateIdentity(auth-id, authCode, PsuFinTechPassword)
BankingProtocolFacade -> BankingProtocolFacade : loadPsuFinTechDataStore: PsuFinTechDataStore
BankingProtocolFacade -> BankingProtocolFacade : PsuFinTechDataStore.importInbox(authCode)
return 200_Asscociated
return 200_Asscociated
return 202_RedirectToService
FinTechUI -> FinTechApi ++ : service()
FinTechApi -> FinTechApi : authorizePSU(RedirectCookie):PsuFinTechPassword
FinTechApi -> TppBankingApi ++ : service[PsuFinTechPassword]()
TppBankingApi -> BankingProtocolFacade ++ : service[PsuFinTechPassword]()
BankingProtocolFacade -> BankingProtocolFacade : loadConsentFromPrivateStore(PsuFinTechPassword)
return 200_ServiceResult
return 200_ServiceResult
return 200_ServiceResult

@enduml